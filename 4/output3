lex file:
-----------------------------------------------------------------
%{
#include "y.tab.h"
#include<math.h>
%}
digit [0-9]*

%%
{digit}	{yylval.value=atof(yytext);return NUM;}
"+" {return '+';}
"-" {return '-';}
"*" {return '*';}
"/" {return '/';}
"^" {return '^';}
"!" {return '!';}
"(" {return '(';}
")" {return ')';}
sin|SIN {return SIN;}
cos|COS {return COS;}
tan|TAN {return TAN;}
sqrt|SQRT {return SQRT;}
square|SQUARE {return SQUARE;}
cube|CUBE {return CUBE;}

\n {return '\n';}

%%
int yywrap()
{
	return 0;
}
------------------------------------------------------------
yacc file
------------------------------------------------------------
%{
	#include<stdio.h>
	#include<math.h>
	#define PI 3.1415
%}
%union
{
	float value;
}
%token '+' '\n'
%token <value> NUM
%token SIN COS TAN SQRT SQUARE CUBE 
%type <value> S
%type <value> E
%type <value> L
%left '+' '-'
%left '*' '/'
%right '^'

%%
L:S L
 |
 ;
S:E '\n' {printf("%f\n",$1);}
 ;
E:E'+'E {$$=$1 + $3;}
 |E'-'E {$$=$1 - $3;}
 |E'*'E {$$=$1 * $3;}
 |E'/'E {$$=$1 / $3;}
 |'('E')' {$$=$2;}
 |E'^'E {
	int i,j=$1;
	for(i=1;i<$3;i++)
	{
		j=j*$1;
	}
	$$=j;}
 |E'!' {
	int i,j=1;
	for(i=1;i<=$1;i++)
	{
		j=j*i;
	}$$=j;}
 |SIN'('E')' {$$=sin($3/180*PI);}
 |COS'('E')' {$$=cos($3/180*PI);}
 |TAN'('E')' {$$=tan($3/180*PI);}
 |SQRT'('E')' {$$=sqrt($3);}
 |SQUARE'('E')' {$$=$3*$3;}
 |CUBE'('E')' {$$=$3*$3*$3;}
 |NUM {$$=$1;}
 ;

%%
int main()
{	
	printf("Enter the Expression & Press Enter : ");
	yyparse();
	
}

-------------------------------------------------------------------
OUTPUT:
swl-09@Comp-SWL-09:~/BE48$ lex one.l
swl-09@Comp-SWL-09:~/BE48$ yacc -d one.y
swl-09@Comp-SWL-09:~/BE48$ cc lex.yy.c y.tab.c -ll -ly -lm
swl-09@Comp-SWL-09:~/BE48$ ./a.out
Enter the Expression & Press Enter : 5+9
14.000000
9-5
4.000000
9*5
45.000000
9/5
1.800000
9^3
729.000000
9!
362880.000000
sin(30)
0.499987
cos(60)
0.500027
tan(45)
0.999954
sqrt(625)
25.000000
square(9)
81.000000
cube(15)
3375.000000


